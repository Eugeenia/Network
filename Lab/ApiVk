import requests
import time

class Api:
    def __init__(self):
        self.token = input('Input your token: ')

    def make_request(self, method):
        req = requests.get(f'https://api.vk.com/method/{method}?access_token={self.token}&v=5.74')
        return req.json()

    def get_friends(self, method):
        answer = self.make_request(method)
        try:
            friends = answer['response']['items']
            print(f'Friends: {friends}')
        except KeyError:
            return
        return friends

    def get_mutual_friends(self, method):
        mutual = dict()
        friends = self.get_friends(method)
        for f in friends:
            m = requests.get(f'https://api.vk.com/method/friends.getMutual?access_token={self.token}&target_uid={f}&v=5.74').json()
            print(f'M: {m}')
            time.sleep(1)
            try:
                mutual[f] = m['response']
            except KeyError:
                continue
        return mutual

    def get_most(self, method):
        friends = self.get_mutual_friends(method)
        maximum = 0
        most = None
        for key in friends:
            if len(friends[key]) > maximum:
                maximum = len(friends[key])
                most = key
        most = requests.get(f'https://api.vk.com/method/users.get?user_ids={most}&access_token={self.token}&v=5.74').json()
        print(f'most::{most}')
        friend = most['response'][0]['first_name'] + ' ' + most['response'][0]['last_name']
        return friend, maximum


a = Api()
name, count = a.get_most('friends.get')
print(f'Most: {name}\nNumber of mutual friends: {count}')
